version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'user-events:1:1,order-events:1:1,product-events:1:1'
    networks:
      - kafka-net

  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: test123
      MYSQL_DATABASE: ecommerce
      MYSQL_USER: user
      MYSQL_PASSWORD: test123
    ports:
      - '3306:3306'
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - kafka-net

  authentication-service:
    build:
      dockerfile: apps/authentication-service/Dockerfile
    container_name: authentication-service
    networks:
      - kafka-net
    depends_on:
      - kafka

  product-catalog-service:
    build:
      dockerfile: apps/product-catalog-service/Dockerfile
    container_name: product-catalog-service
    networks:
      - kafka-net
    depends_on:
      - kafka
      - mariadb

  order-service:
    build:
      dockerfile: apps/order-service/Dockerfile
    container_name: order-service
    networks:
      - kafka-net
    depends_on:
      - kafka

  api-gateway:
    build:
      dockerfile: apps/api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - '3003:3003'
    networks:
      - kafka-net
    depends_on:
      - kafka
      - authentication-service
      - product-catalog-service
      - order-service

networks:
  kafka-net:
    driver: bridge

volumes:
  mariadb-data:
